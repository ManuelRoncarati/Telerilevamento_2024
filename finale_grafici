#grafico barre per file exel aree cluster
# ðŸ“Œ Caricare i pacchetti necessari
library(readxl)
library(ggplot2)
library(dplyr)
library(viridis)
library(stringr)  # Per lavorare con le stringhe

# ðŸ“Œ Impostare la working directory (MODIFICA con il tuo percorso)
setwd("C:/PN_Sila")  # Cambia con il percorso corretto del tuo file

# ðŸ“Œ Caricare il file Excel (MODIFICA con il nome corretto)
df <- read_excel("cluster_areas_Sila.xlsx")  # Assicurati che il nome sia corretto

# ðŸ“Œ Estrarre entrambi gli anni dalla colonna Date
df$Date <- str_extract_all(df$Date, "\\d{4}")  # Estrai tutti gli anni (restituisce una lista)
df$Date <- sapply(df$Date, function(x) paste(x, collapse = "-"))  # Combina gli anni in "YYYY-YYYY"

# ðŸ“Œ Convertire Date in factor per renderla DISCRETA
df$Date <- as.factor(df$Date)

# ðŸ“Œ Creazione del grafico a barre
grafico <- ggplot(df, aes(x = LULCC, y = Area_km2, fill = Date)) +
    geom_bar(stat = "identity",
             position = position_dodge(width = 0.9),  # Spazio tra le barre nei gruppi
             width = 0.8) +  # Barre larghe per occupare tutto lo spazio disponibile

    # ðŸ“Œ Etichette sopra le barre con posizione allineata
    geom_text(aes(label = sprintf("%.1f", Area_km2)),
              position = position_dodge(width = 0.9),  # Stessa posizione delle barre
              vjust = -0.5,  # Leggero spostamento in alto
              size = 3,
              fontface = "bold") +  

    scale_fill_viridis_d(option = "viridis", direction = -1) +  # Adesso funziona correttamente

    theme_minimal() +  # Stile minimalista senza bordi inutili
    theme(
        plot.title = element_text(size = 18, face = "bold", hjust = 0.5, margin = margin(b = 15)),
        axis.title.x = element_text(size = 14, margin = margin(t = 10)),
        axis.title.y = element_text(size = 14, margin = margin(r = 10)),
        axis.text = element_text(size = 12),

        # ðŸ“Œ Etichette dell'asse X centrate sotto i gruppi e parallele all'asse
        axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5),  

        legend.position = "right",
        legend.title = element_text(size = 13, face = "bold"), 
        legend.text = element_text(size = 12),

        panel.grid.major.y = element_line(color = "gray85"),
        panel.grid.major.x = element_blank(),
        panel.grid.minor = element_blank(),

        plot.margin = margin(t = 5, r = 5, b = 5, l = 5)  # Ottimizza lo spazio
    ) +

    labs(title = "Distribuzione dell'area per uso del suolo e periodo",
         x = "Uso del suolo",
         y = expression(paste("Area (", km^2, ")")),
         fill = "Periodo") +

    # ðŸ“Œ Rimuoviamo margini inutili per far occupare tutto lo spazio all'asse X
    scale_x_discrete(expand = c(0, 0)) +  

    # ðŸ“Œ Eliminazione spazio extra sopra e sotto
    scale_y_continuous(expand = c(0, 0), limits = c(0, 400))

# ðŸ“Œ Mostrare il grafico
print(grafico)







#stacked area

# Caricare le librerie necessarie
library(ggplot2)
library(dplyr)
library(viridis)
library(readxl)
library(lubridate)

# Specificare il percorso del file Excel
file_path <- "C:/PN_Sila/cluster_areas_Sila.xlsx"

# Verificare che il file esista
if(!file.exists(file_path)){
    stop(paste("Il file", file_path, "non esiste nella directory corrente."))
}

# Caricare i dati dal foglio "Sheet 1"
df <- read_excel(file_path, sheet = "Sheet 1")

# Verificare i nomi delle colonne
required_columns <- c("Date", "LULCC", "Area_km2")
missing_columns <- setdiff(required_columns, names(df))
if(length(missing_columns) > 0){
    stop(paste("Le seguenti colonne mancanti nel file Excel:", paste(missing_columns, collapse = ", ")))
}

# Estrarre l'anno dalla colonna Date
# Assumendo che la colonna Date sia in formato Date o character
df <- df %>%
    mutate(Year = year(as.Date(Date, format = "%Y-%m-%d")))

# Convertire Area_km2 in numerico se necessario
df <- df %>%
    mutate(Area_km2 = as.numeric(Area_km2))

# Rimuovere eventuali valori mancanti nelle colonne chiave
df_clean <- df %>%
    filter(!is.na(Year) & !is.na(LULCC) & !is.na(Area_km2))

# Aggregare i dati per anno e categoria di uso del suolo
df_area <- df_clean %>%
    group_by(Year, LULCC) %>%
    summarise(Area_km2 = sum(Area_km2), .groups = "drop")

# Creare il grafico stacked area
ggplot(df_area, aes(x = Year, y = Area_km2, fill = LULCC)) + 
    geom_area(alpha = 0.8, size = 0.5, colour = "black") +
    scale_fill_viridis(discrete = TRUE, option = "D") +
    theme_minimal() + 
    ggtitle("Cambiamenti nell'uso del suolo nel tempo") +
    labs(x = "Anno", y = "Area (kmÂ²)", fill = "Uso del suolo") +
    theme(
        legend.position = "right",
        text = element_text(size = 12),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        axis.title = element_text(size = 14),
        axis.text = element_text(size = 12)
    )

# Salvare il grafico
ggsave("cambiamenti_uso_suolo.png", width = 10, height = 6)







#BARRE CORRETTO PER SILA
# grafico barre per file exel aree cluster

# ðŸ“Œ Caricare i pacchetti necessari
library(readxl)
library(ggplot2)
library(dplyr)
library(viridis)
library(stringr)  # Per lavorare con le stringhe

# ðŸ“Œ Impostare la working directory (MODIFICA con il tuo percorso)
setwd("C:/PN_Sila")  # Cambia con il percorso corretto del tuo file

# ðŸ“Œ Caricare il file Excel (MODIFICA con il nome corretto)
df <- read_excel("cluster_areas_5_cluster.xlsx")  # Assicurati che il nome sia corretto

# ðŸ“Œ Estrarre entrambi gli anni dalla colonna Date
df$Date <- str_extract_all(df$Date, "\\d{4}")  # Estrai tutti gli anni (restituisce una lista)
df$Date <- sapply(df$Date, function(x) paste(x, collapse = "-"))  # Combina gli anni in "YYYY-YYYY"

# ðŸ“Œ Convertire Date in factor per renderla DISCRETA
df$Date <- as.factor(df$Date)

# --- CORREZIONE: normalizziamo la colonna LULCC per unificare "acque" ---
df <- df %>%
  mutate(
    LULCC = tolower(LULCC),            # tutto minuscolo
    LULCC = str_trim(LULCC),           # rimuove spazi iniziali/finali
    LULCC = ifelse(str_detect(LULCC, "^acque"), "acque", LULCC)
    # Se ci sono altre varianti (es. "acque interne", "Acque superficiali"),
    # puoi sostituire con una regexp piÃ¹ adatta, ad es. sub("^acque.*", "acque", LULCC)
  )

# (Facoltativo) Convertiamo LULCC in factor se serve:
df$LULCC <- as.factor(df$LULCC)

# ðŸ“Œ Creazione del grafico a barre
grafico <- ggplot(df, aes(x = LULCC, y = Area_km2, fill = Date)) +
  geom_bar(stat = "identity",
           position = position_dodge(width = 0.9),  # Spazio tra le barre nei gruppi
           width = 0.8) +  # Barre larghe per occupare tutto lo spazio disponibile
  
  # ðŸ“Œ Etichette sopra le barre con posizione allineata
  geom_text(aes(label = sprintf("%.1f", Area_km2)),
            position = position_dodge(width = 0.9),  # Stessa posizione delle barre
            vjust = -0.5,  # Leggero spostamento in alto
            size = 3,
            fontface = "bold") +
  
  scale_fill_viridis_d(option = "viridis", direction = -1) +  # Palette viridis
  theme_minimal() +  # Stile minimalista
  theme(
    plot.title = element_text(size = 18, face = "bold", hjust = 0.5, margin = margin(b = 15)),
    axis.title.x = element_text(size = 14, margin = margin(t = 10)),
    axis.title.y = element_text(size = 14, margin = margin(r = 10)),
    axis.text = element_text(size = 12),
    axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5),
    legend.position = "right",
    legend.title = element_text(size = 13, face = "bold"), 
    legend.text = element_text(size = 12),
    panel.grid.major.y = element_line(color = "gray85"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    plot.margin = margin(t = 5, r = 5, b = 5, l = 5)
  ) +
  labs(title = "Distribuzione dell'area per uso del suolo e periodo",
       x = "Uso del suolo",
       y = expression(paste("Area (", km^2, ")")),
       fill = "Periodo") +
  scale_x_discrete(expand = c(0, 0)) +  
  scale_y_continuous(expand = c(0, 0), limits = c(0, 400))

# ðŸ“Œ Mostrare il grafico
print(grafico)

