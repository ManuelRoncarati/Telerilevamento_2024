setwd("C:/esame/landsat_5_1984_sila")

library(sp)
library(terra)
library(raster)
library(RStoolbox)
library(ggplot2)
library(gridExtra)
library(sf)


metaData<- readMeta("LT05_L1TP_188033_19840620_20200918_02_T1_MTL.txt")

stack_calabria_1984 <- stackMeta(metaData)

plot(stack_calabria_1984)

shape_parco <- st_read("shape_sila.shp")

crop_sila_1984 <- crop(stack_calabria_1984, shape_parco[1])

sila_1984<-mask(crop_sila_1984, shape_parco[1])

#sila_1984[sila_1984 == Inf] <- NA
#sila_1984[sila_1984 == -Inf] <- NA

df_sila_1984 <- as.data.frame(sila_1984)

#df_sila_1984_clean <- na.omit(df_sila_1984)

# Inizio misurazione del tempo di computazione
timeStart <- proc.time()

# Genera grafici per ogni banda del DataFrame pulito
B1_dn <- ggplot(df_sila_1984, aes(B1_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B2_dn <- ggplot(df_sila_1984, aes(B2_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B3_dn <- ggplot(df_sila_1984, aes(B3_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B4_dn <- ggplot(df_sila_1984, aes(B4_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B5_dn <- ggplot(df_sila_1984, aes(B5_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B7_dn <- ggplot(df_sila_1984, aes(B7_dn)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

# Fine misurazione del tempo di computazione
proc.time() - timeStart

grid.arrange(B1_dn, B2_dn, B3_dn, B4_dn, B5_dn, B7_dn, ncol=2)

sila_1984_radParameters <- metaData$CALRAD
sila_1984_radParameters

rad_sila_1984 <-radCor(sila_1984, metaData = metaData, method = "rad") # DN to top-of-the-atmosphere radiance


df_rad_sila_1984<- as.data.frame(rad_sila_1984)





# Inizio misurazione del tempo di computazione
timeStart <- proc.time()

# Genera grafici per ogni banda del DataFrame pulito
B1_rad <- ggplot(df_rad_sila_1984, aes(B1_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B2_rad <- ggplot(df_rad_sila_1984, aes(B2_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B3_rad <- ggplot(df_rad_sila_1984, aes(B3_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B4_rad <- ggplot(df_rad_sila_1984, aes(B4_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B5_rad <- ggplot(df_rad_sila_1984, aes(B5_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B7_rad <- ggplot(df_rad_sila_1984, aes(B7_tra)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

# Fine misurazione del tempo di computazione
proc.time() - timeStart

grid.arrange(B1_rad, B2_rad, B3_rad, B4_rad, B5_rad, B7_rad, ncol=2)

apref_sila_1984<-radCor(sila_1984, metaData = metaData, method = "apref")# Dn to top-of-the-atmosphere reflectance
df_apref_sila_1984<- as.data.frame(apref_sila_1984)


# Inizio misurazione del tempo di computazione
timeStart <- proc.time()

# Genera grafici per ogni banda del DataFrame pulito
B1_apref<- ggplot(df_apref_sila_1984, aes(B1_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B2_apref <- ggplot(df_apref_sila_1984, aes(B2_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B3_apref <- ggplot(df_apref_sila_1984, aes(B3_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B4_apref <- ggplot(df_apref_sila_1984, aes(B4_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B5_apref <- ggplot(df_apref_sila_1984, aes(B5_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

B7_apref <- ggplot(df_apref_sila_1984, aes(B7_tre)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 10) + 
  geom_density()

# Fine misurazione del tempo di computazione
proc.time() - timeStart

grid.arrange(B1_apref, B2_apref, B3_apref, B4_apref, ncol=1)


hazeDN <- estimateHaze(sila_1984, hazeBands = 1:4,darkProp = 0.01, plot = TRUE)#  automatic haze estimation

sdos_sila_1984 <- radCor(sila_1984, metaData = metaData, method = "sdos",hazeValues = hazeDN, hazeBands = 1:4)# radiometric correction using the SDOS method

dos_sila_1984 <- radCor(sila_1984, metaData = metaData, method = "dos")# DOS

plotRGB(dos_sila_1984,5,4,3,stretch="lin")

costz_sila_1984 <-radCor(sila_1984, metaData=metaData,method="costz",hazeValues=hazeDN, hazeBands = 1:4)# COST

plotRGB(costz_sila_1984,5,4,3,stretch="lin")








































library(sp)
library(terra)
library(raster)
library(RStoolbox)
library(ggplot2)
library(gridExtra)
library(sf)

setwd("C:/sila_1986")

list.files()

metaData<- readMeta("LT05_L1TP_187033_19860603_20200918_02_T1_MTL.txt")
stack_calabria_1986 <- stackMeta(metaData)

plot(stack_calabria_1986)

shape_parco <- st_read("shape_sila.shp")

crop_sila_1986 <- crop(stack_calabria_1986, shape_parco[1])

sila_1986<-mask(crop_sila_1986, shape_parco[1])

plot(sila_1986)

dev.off()

# Rimuove il sesto layer (B6_tra)
sila_1986_subset <- subset(sila_1986, c("B1_tra", "B2_tra", "B3_tra", "B4_tra", "B5_tra", "B7_tra"))

# Visualizza i layer rimanenti
print(rad_sila_1986_subset)


sila_1986_radParameters <- metaData$CALRAD
sila_1986_radParameters



rad_sila_1986 <-radCor(sila_1986, metaData = metaData, method = "rad") # DN to top-of-the-atmosphere radiance

apref_sila_1986<-radCor(sila_1986, metaData = metaData, method = "apref")# Dn to top-of-the-atmosphere reflectance

hazeDN <- estimateHaze(sila_1986, hazeBands = 1:4,darkProp = 0.01, plot = TRUE)#  automatic haze estimation

sdos_sila_1986 <- radCor(sila_1986, metaData = metaData, method = "sdos",hazeValues = hazeDN, hazeBands = 1:4)# radiometric correction using the SDOS method

dos_sila_1986 <- radCor(sila_1986, metaData = metaData, method = "dos")# DOS

costz_sila_1986 <-radCor(sila_1986, metaData=metaData,method="costz",hazeValues=hazeDN, hazeBands = 1:4)# COST

dev.off()


par(mfrow=c(2,3))


plotRGB(sila_1986,5,4,3,stretch="lin")
plotRGB(rad_sila_1986,5,4,3,stretch="lin")
plotRGB(apref_sila_1986,5,4,3,stretch="lin")
plotRGB(sdos_sila_1986,5,4,3,stretch="lin")
plotRGB(dos_sila_1986,5,4,3,stretch="lin")
plotRGB(costz_sila_1986,5,4,3,stretch="lin")

nir_1986 <- sila_1986[[4]]
nir_1986_cost <- costz_sila_1986[[4]]
nir_1986_dos <- dos_sila_1986[[4]]

#writeRaster(nir_1986, filename = "nir_1986.TIF")
#writeRaster(nir_1986_cost, filename = "nir_1986_cost.TIF")
#writeRaster(nir_1986_dos, filename = "nir_1986_dos.TIF")
